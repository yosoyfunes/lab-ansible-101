---
# Playbook principal para desplegar la aplicaci√≥n TODO completa
- name: Desplegar aplicaci√≥n TODO de 3 capas
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Mostrar informaci√≥n del despliegue
      debug:
        msg:
          - "=== Iniciando despliegue de aplicaci√≥n TODO ==="
          - "Arquitectura: Frontend (Nginx) ‚Üí Backend (Flask) ‚Üí Database (PostgreSQL)"
          - "Servidores web: {{ groups['webservers'] }}"
          - "Servidores app: {{ groups['appservers'] }}"
          - "Servidores DB: {{ groups['databases'] }}"

# Paso 1: Configurar base de datos
- import_playbook: database.yml

# Paso 2: Configurar servidor de aplicaci√≥n
- import_playbook: appserver.yml

# Paso 3: Configurar servidor web
- import_playbook: webserver.yml

# Paso 4: Verificaci√≥n final
- name: Verificaci√≥n final del despliegue
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Esperar a que todos los servicios est√©n listos
      pause:
        seconds: 10
        prompt: "Esperando a que todos los servicios se inicializen..."

    - name: Verificar conectividad de la base de datos
      postgresql_ping:
        db: "todoapp"
        login_host: "192.168.1.12"
        login_user: "todouser"
        login_password: "todopass123"
      delegate_to: "{{ groups['databases'][0] }}"

    - name: Verificar API del backend
      uri:
        url: "http://192.168.1.11:5000/health"
        method: GET
        status_code: 200
      register: backend_health

    - name: Verificar frontend web
      uri:
        url: "http://192.168.1.10:80/"
        method: GET
        status_code: 200
      register: frontend_health

    - name: Mostrar resultado del despliegue
      debug:
        msg:
          - "=== DESPLIEGUE COMPLETADO EXITOSAMENTE ==="
          - "üóÑÔ∏è  Base de datos: PostgreSQL en 192.168.1.12:5432"
          - "‚öôÔ∏è  Backend API: Flask en 192.168.1.11:5000"
          - "üåê Frontend: Nginx en 192.168.1.10:80"
          - ""
          - "üöÄ Accede a la aplicaci√≥n en: http://192.168.1.10"
          - ""
          - "Endpoints disponibles:"
          - "  - /              ‚Üí Interfaz web principal"
          - "  - /api/tasks     ‚Üí API REST de tareas"
          - "  - /health        ‚Üí Estado del backend"
          - "  - /nginx-health  ‚Üí Estado del frontend"
