---
- name: Desplegar Hello World API (Nginx + Node JS)
  hosts: servers
  become: true
  gather_facts: yes # ansible nodo1 -m setup -i inventory.ini | grep ansible_os_family

  vars:
    app_dir: /home/ubuntu/nodejs-helloworld-api

  tasks:

    - name: Mostrar información del servidor
      debug:
        msg:
          - "=== Configurando servidor {{ inventory_hostname }} ==="
          - "IP: {{ ansible_host }}"
          - "Sistema: {{ ansible_distribution }} {{ ansible_distribution_version }}"

    - name: Actualizar cache de paquetes
      ansible.builtin.apt:
        name: '*'
        state: latest
      when: ansible_os_family == "Debian"

    - name: Instalar paquetes necesarios
      ansible.builtin.apt:
        name: 
          - nginx
          - nodejs
          - npm
          - git
          - curl
          - vim
        state: latest
      when: ansible_os_family == "Debian"

    ## Paso 1 Configurar Nginx
    - name: Copiar archivo de configuracion de nginx
      ansible.builtin.copy:
        src: /ansible_work/files/nginx.conf
        dest: /etc/nginx/nginx.conf
        backup: yes

    - name: Eliminar configuración por defecto de Nginx
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Verificar configuración de Nginx
      command: nginx -t
      register: nginx_syntax
      changed_when: false

    - name: Mostrar resultado de verificación de Nginx
      debug:
        var: nginx_syntax.stdout_lines

    ## Paso 2 Clonar repositorio de Node.js
    - name: Clonar repositorio de Node.js Hello World API
      ansible.builtin.git:
        repo: 'https://github.com/yosoyfunes/nodejs-helloworld-api.git'
        dest: "{{ app_dir }}"
        force: yes

    - name: Instalar dependencias de Node.js
      command: npm install
      args:
        chdir: "{{ app_dir }}" 

    - name: Instalar pm2 globalmente
      npm:
        name: pm2
        global: yes
        state: present

    # ------------------------------------------------------------------
    # 3. Supervisor configura Nginx + pm2
    - name: Instalar supervisor
      ansible.builtin.apt:
        name: supervisor
        state: present
        update_cache: yes

    - name: Plantilla de supervisor
      ansible.builtin.copy:
        dest: /etc/supervisor/conf.d/nginx_node.conf
        content: |
          [program:nginx]
          command=/usr/sbin/nginx -g 'daemon off;'
          autorestart=true
          priority=10

          [program:nodeapp]
          command=/usr/local/bin/pm2-runtime start {{ app_dir }}/index.js --name hello-api
          directory={{ app_dir }}
          autorestart=true
          priority=20

    - name: Asegurar que supervisord esté corriendo
      shell: supervisord -c /etc/supervisor/supervisord.conf
      args:
        creates: /var/run/supervisord.pid

    - name: Recargar configuración de supervisor
      command: supervisorctl reread

    - name: Aplicar nueva configuración
      command: supervisorctl update

    - name: Iniciar todos los servicios de supervisor
      command: supervisorctl start all

    # ------------------------------------------------------------------
    # 4. Health‑checks
    - name: Esperar a que Node.js esté listo
      pause:
        seconds: 5
        prompt: "Esperando a que Node.js se inicialice..."

    - name: Verificar que Node.js esté respondiendo
      uri:
        url: "http://localhost:3000/"
        method: GET
        status_code: 200
      retries: 5
      delay: 10

    - name: Verificar que Nginx esté respondiendo
      uri:
        url: "http://localhost:80/"
        method: GET
        status_code: 200
      retries: 5
      delay: 5

    - name: Mostrar resultado final
      debug:
        msg:
          - "=== DESPLIEGUE COMPLETADO EXITOSAMENTE ==="
          - "🌐 Servidor: {{ ansible_host }}"
          - "⚙️  Node.js API ejecutándose en puerto 3000"
          - "🌐 Nginx proxy ejecutándose en puerto 80"
          - ""
          - "🚀 Accede a la aplicación en: http://{{ ansible_host }}"
          - ""
          - "Para probar:"
          - "  curl http://{{ ansible_host }}/"
          - "  curl http://{{ ansible_host }}/nginx-health"
